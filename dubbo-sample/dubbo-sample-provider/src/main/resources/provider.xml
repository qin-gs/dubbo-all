<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 整个项目在分布式架构中的唯一名称-->
    <dubbo:application name="provider" owner="qgs">
        <dubbo:parameter key="qos.enable" value="true"/>
        <dubbo:parameter key="qos.accept.foreign.ip" value="false"/>
        <dubbo:parameter key="qos.port" value="8900"/>
    </dubbo:application>

    <!-- 监控中心配置-->
    <dubbo:monitor protocol="registry"/>

    <!-- 注册中心配置，dubbo这个服务要暴露的服务地址对应的注册中心 -->
    <!-- dubbo 发布的 url 注册到了 zookeeper，消费端从 zookeeper 消费，zookeeper 相当于一个中介，给消费者提供服务。-->
    <!-- address 是注册中心的地址，这里我们配置的是 N/A 表示由 dubbo 自动分配地址 -->
    <!-- 如果是 zookeeper集群 的话 -->
    <!--<dubbo:registry protocol="zookeeper" address="192.168.11.129:2181,192.168.11.137:2181,192.168.11.138:2181"/>-->
    <!-- 启动时检查：dubbo 会在启动时检查依赖的服务是否可用，不可用则抛出异常，测试时可以关闭-->
    <dubbo:registry address="zookeeper://localhost:2181" check="false"/>

    <!-- 协议 -->
    <dubbo:protocol name="dubbo" port="20880"/>

    <!-- 发布服务，暴露服务接口 -->
    <!-- 集群容错 -->
    <dubbo:service cluster="failover"
                   retries="2"
                   interface="com.example.service.ProviderService"
                   ref="providerService"/>

    <bean id="providerService" class="com.example.service.ProviderServiceImpl"/>

</beans>